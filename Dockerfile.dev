FROM openknowledge/ckan-dev:2.8

MAINTAINER Costin Bleotu <costin.bleotu@code4.ro>

# Set timezone
ARG TZ
RUN cp /usr/share/zoneinfo/$TZ /etc/localtime
RUN echo $TZ > /etc/timezone

# Install any extensions needed by your CKAN instance
# (Make sure to add the plugins to CKAN__PLUGINS in the .env file)
# For instance:
RUN pip install -e git+https://github.com/ViderumGlobal/ckanext-c3charts#egg=ckanext-c3charts && \
    pip install -e git+https://github.com/ckan/ckanext-spatial.git#egg=ckanext-spatial && \
    pip install -r https://raw.githubusercontent.com/ckan/ckanext-spatial/master/pip-requirements.txt && \
    pip install -e git+https://github.com/OpenGov-OpenData/ckanext-odata#egg=ckanext-odata && \
    pip install -e git+https://github.com/ckan/ckanext-geoview#egg=ckanext-geoview && \
    pip install -e git+https://github.com/costibleotu/ckanext-datarequests#egg=ckanext-datarequests && \
    pip install -e git+https://github.com/geosolutions-it/ckanext-tableauview.git#egg=ckanext-tableauview && \
    pip install flask_debugtoolbar ckantoolkit ckanext-geoview && \
    # pip install -e git+https://github.com/ckan/ckanext-harvest.git#egg=ckanext-harvest && \
    # pip install -r https://raw.githubusercontent.com/ckan/ckanext-harvest/master/pip-requirements.txt && \
    pip install ckanext-xloader && \
    pip install -r https://raw.githubusercontent.com/ckan/ckanext-xloader/master/requirements.txt && \
    pip install -U requests[security]

# Clone the extension(s) your are writing for your own project in the `src` folder
# to get them mounted in this image at runtime

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)
# See https://github.com/okfn/docker-ckan#applying-patches
COPY patches ${APP_DIR}/patches

RUN for d in $APP_DIR/patches/*; do \
        if [ -d $d ]; then \
            for f in `ls $d/*.patch | sort -g`; do \
                cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
            done ; \
        fi ; \
    done